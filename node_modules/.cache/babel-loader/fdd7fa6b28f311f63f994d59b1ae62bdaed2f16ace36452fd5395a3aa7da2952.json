{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teren\\\\Documents\\\\GitHub\\\\arbitrage-betting\\\\src\\\\components\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchOdds } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [odds, setOdds] = useState([]);\n  useEffect(() => {\n    const getOdds = async () => {\n      try {\n        const data = await fetchOdds();\n        setOdds(data);\n      } catch (error) {\n        console.error('Failed to fetch odds:', error);\n      }\n    };\n    getOdds();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NBA Odds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: odds.map((game, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [game.home_team, \" vs \", game.away_team]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"F/V+dxJ9GLNnNRYr+i2N0Lf480w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchOdds","jsxDEV","_jsxDEV","App","_s","odds","setOdds","getOdds","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","game","index","home_team","away_team","_c","$RefreshReg$"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/components/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchOdds } from '../api';\n\nconst App = () => {\n  interface Game {\n    home_team: string;\n    away_team: string;\n  }\n\n  const [odds, setOdds] = useState<Game[]>([]);\n\n  useEffect(() => {\n    const getOdds = async () => {\n      try {\n        \n        const data = await fetchOdds();\n        setOdds(data);\n      } catch (error) {\n        console.error('Failed to fetch odds:', error);\n      }\n    };\n\n    getOdds();\n  }, []);\n\n  return (\n    <div>\n      <h1>NBA Odds</h1>\n      <ul>\n        {odds.map((game, index) => (\n          <li key={index}>\n            {game.home_team} vs {game.away_team}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAMhB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QAEF,MAAMC,IAAI,GAAG,MAAMR,SAAS,CAAC,CAAC;QAC9BM,OAAO,CAACE,IAAI,CAAC;MACf,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDF,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBb,OAAA;MAAAS,QAAA,EACGN,IAAI,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBhB,OAAA;QAAAS,QAAA,GACGM,IAAI,CAACE,SAAS,EAAC,MAAI,EAACF,IAAI,CAACG,SAAS;MAAA,GAD5BF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CAlCID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}