{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teren\\\\Documents\\\\GitHub\\\\arbitrage-betting\\\\src\\\\components\\\\functions\\\\renderArbitrageAssists.tsx\";\nimport React from 'react';\nimport { Box, Grid, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateImpliedProbability = odds => 1 / odds;\nconst checkArbitrage = (overOdds, underOdds) => {\n  const probOver = calculateImpliedProbability(overOdds);\n  const probUnder = calculateImpliedProbability(underOdds);\n  return probOver + probUnder < 1;\n};\nconst extractPlayerAssists = markets => markets === null || markets === void 0 ? void 0 : markets.find(m => m.key === 'player_assists');\nexport const renderArbitrageAssists = games => {\n  const playerPropsArbitrage = [];\n  games.forEach(game => {\n    const players = {};\n    game.bookmakers.forEach(bookmaker => {\n      const assistMarket = extractPlayerAssists(bookmaker.markets);\n      if (!assistMarket) return;\n      assistMarket.outcomes.forEach(outcome => {\n        const playerName = outcome.description;\n        if (!players[playerName]) players[playerName] = {};\n        if (!players[playerName][bookmaker.title]) players[playerName][bookmaker.title] = {};\n        if (outcome.name === 'Over') {\n          players[playerName][bookmaker.title].over = outcome;\n        } else if (outcome.name === 'Under') {\n          players[playerName][bookmaker.title].under = outcome;\n        }\n      });\n    });\n    Object.entries(players).forEach(([playerName, books]) => {\n      const bookmakers = Object.entries(books);\n      for (let i = 0; i < bookmakers.length; i++) {\n        const [bk1, odds1] = bookmakers[i];\n        for (let j = 0; j < bookmakers.length; j++) {\n          if (i === j) continue;\n          const [bk2, odds2] = bookmakers[j];\n          if (odds1.over && odds2.under && odds1.over.point !== undefined && odds2.under.point !== undefined && odds1.over.point <= odds2.under.point && checkArbitrage(odds1.over.price, odds2.under.price)) {\n            playerPropsArbitrage.push(/*#__PURE__*/_jsxDEV(Box, {\n              borderWidth: \"1px\",\n              borderRadius: \"md\",\n              p: 4,\n              boxShadow: \"md\",\n              bg: \"gray.50\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"bold\",\n                fontSize: \"lg\",\n                color: \"teal.500\",\n                children: [game.home_team, \" vs \", game.away_team]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"bold\",\n                fontSize: \"lg\",\n                color: \"blue.600\",\n                children: [playerName, \" (Assists Market)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [bk1, \" (Over):\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 17\n                }, this), \" \", odds1.over.price, \" (Line: \", odds1.over.point, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [bk2, \" (Under):\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 17\n                }, this), \" \", odds2.under.price, \" (Line: \", odds2.under.point, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"bold\",\n                color: \"red.500\",\n                children: \"Arbitrage!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, `${game.home_team}-${game.away_team}-${playerName}-${bk1}-${bk2}-${odds1.over.point}-${odds2.under.point}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this));\n          }\n        }\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    templateColumns: \"repeat(3, 1fr)\",\n    gap: 5,\n    p: 5,\n    children: playerPropsArbitrage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","Box","Grid","Text","jsxDEV","_jsxDEV","calculateImpliedProbability","odds","checkArbitrage","overOdds","underOdds","probOver","probUnder","extractPlayerAssists","markets","find","m","key","renderArbitrageAssists","games","playerPropsArbitrage","forEach","game","players","bookmakers","bookmaker","assistMarket","outcomes","outcome","playerName","description","title","name","over","under","Object","entries","books","i","length","bk1","odds1","j","bk2","odds2","point","undefined","price","push","borderWidth","borderRadius","p","boxShadow","bg","children","fontWeight","fontSize","color","home_team","away_team","fileName","_jsxFileName","lineNumber","columnNumber","templateColumns","gap"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/components/functions/renderArbitrageAssists.tsx"],"sourcesContent":["import React, { JSX } from 'react';\r\nimport { Box, Grid, Text } from '@chakra-ui/react';\r\n\r\ninterface Outcome {\r\n  name: string;\r\n  price: number;\r\n  point?: number;\r\n  description: string; // Player name\r\n}\r\n\r\ninterface Market {\r\n  key: string;\r\n  outcomes: Outcome[];\r\n}\r\n\r\ninterface Bookmaker {\r\n  key: string;\r\n  title: string;\r\n  markets?: Market[];\r\n}\r\n\r\ninterface Game {\r\n  home_team: string;\r\n  away_team: string;\r\n  bookmakers: Bookmaker[];\r\n}\r\n\r\nconst calculateImpliedProbability = (odds: number) => 1 / odds;\r\n\r\nconst checkArbitrage = (overOdds: number, underOdds: number) => {\r\n  const probOver = calculateImpliedProbability(overOdds);\r\n  const probUnder = calculateImpliedProbability(underOdds);\r\n  return probOver + probUnder < 1;\r\n};\r\n\r\nconst extractPlayerAssists = (markets?: Market[]) =>\r\n  markets?.find((m) => m.key === 'player_assists');\r\n\r\nexport const renderArbitrageAssists = (games: Game[]): JSX.Element => {\r\n  const playerPropsArbitrage: JSX.Element[] = [];\r\n\r\n  games.forEach((game) => {\r\n    const players: Record<string, Record<string, { over?: Outcome; under?: Outcome }>> = {};\r\n\r\n    game.bookmakers.forEach((bookmaker) => {\r\n      const assistMarket = extractPlayerAssists(bookmaker.markets);\r\n      if (!assistMarket) return;\r\n\r\n      assistMarket.outcomes.forEach((outcome) => {\r\n        const playerName = outcome.description;\r\n        if (!players[playerName]) players[playerName] = {};\r\n        if (!players[playerName][bookmaker.title]) players[playerName][bookmaker.title] = {};\r\n\r\n        if (outcome.name === 'Over') {\r\n          players[playerName][bookmaker.title].over = outcome;\r\n        } else if (outcome.name === 'Under') {\r\n          players[playerName][bookmaker.title].under = outcome;\r\n        }\r\n      });\r\n    });\r\n\r\n    Object.entries(players).forEach(([playerName, books]) => {\r\n      const bookmakers = Object.entries(books);\r\n      for (let i = 0; i < bookmakers.length; i++) {\r\n        const [bk1, odds1] = bookmakers[i];\r\n        for (let j = 0; j < bookmakers.length; j++) {\r\n          if (i === j) continue;\r\n          const [bk2, odds2] = bookmakers[j];\r\n\r\n          if (\r\n            odds1.over &&\r\n            odds2.under &&\r\n            odds1.over.point !== undefined &&\r\n            odds2.under.point !== undefined &&\r\n            odds1.over.point <= odds2.under.point &&\r\n            checkArbitrage(odds1.over.price, odds2.under.price)\r\n          ) {\r\n            playerPropsArbitrage.push(\r\n              <Box\r\n                key={`${game.home_team}-${game.away_team}-${playerName}-${bk1}-${bk2}-${odds1.over.point}-${odds2.under.point}`}\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"md\"\r\n                p={4}\r\n                boxShadow=\"md\"\r\n                bg=\"gray.50\"\r\n              >\r\n                <Text fontWeight=\"bold\" fontSize=\"lg\" color=\"teal.500\">\r\n                  {game.home_team} vs {game.away_team}\r\n                </Text>\r\n                <Text fontWeight=\"bold\" fontSize=\"lg\" color=\"blue.600\">\r\n                  {playerName} (Assists Market)\r\n                </Text>\r\n                <Text fontSize=\"sm\">\r\n                <strong>{bk1} (Over):</strong> {odds1.over.price} (Line: {odds1.over.point})\r\n                </Text>\r\n                <Text fontSize=\"sm\">\r\n                <strong>{bk2} (Under):</strong> {odds2.under.price} (Line: {odds2.under.point})\r\n                </Text>\r\n                <Text fontWeight=\"bold\" color=\"red.500\">\r\n                  Arbitrage!\r\n                </Text>\r\n              </Box>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Grid templateColumns=\"repeat(3, 1fr)\" gap={5} p={5}>\r\n      {playerPropsArbitrage}\r\n    </Grid>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}