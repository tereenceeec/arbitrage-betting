{"ast":null,"code":"import axios from 'axios';\nconst API_ODDS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/odds/';\nconst API_EVENTS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/events/';\nconst API_KEYS = ['b52a9454e4debad17c2d97210ef9e90c', 'e5353f118308573f9d6e8af041131ffe'];\nlet currentKeyIndex = 0;\nconst axiosWithKeyFallback = async (url, params) => {\n  while (currentKeyIndex < API_KEYS.length) {\n    try {\n      const response = await axios.get(url, {\n        params: {\n          ...params,\n          apiKey: API_KEYS[currentKeyIndex]\n        }\n      });\n      return response;\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        console.warn(`API key ${API_KEYS[currentKeyIndex]} unauthorized. Switching to next key.`);\n        currentKeyIndex++;\n      } else {\n        throw error;\n      }\n    }\n  }\n  throw new Error('All API keys failed with 401');\n};\nexport const fetchH2HOdds = async () => {\n  try {\n    const response = await axiosWithKeyFallback(API_ODDS_URL, {\n      regions: 'au',\n      markets: 'h2h'\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching H2H odds:', error);\n    throw error;\n  }\n};\nexport const fetchSpreadOdds = async () => {\n  try {\n    const response = await axiosWithKeyFallback(API_ODDS_URL, {\n      regions: 'au',\n      markets: 'spreads'\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching spread odds:', error);\n    throw error;\n  }\n};\nexport const fetchTotalOdds = async () => {\n  try {\n    const response = await axiosWithKeyFallback(API_ODDS_URL, {\n      regions: 'au',\n      markets: 'totals'\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching total odds:', error);\n    throw error;\n  }\n};\nexport const fetchGameIds = async () => {\n  try {\n    const response = await axiosWithKeyFallback(API_EVENTS_URL, {\n      regions: 'au'\n    });\n    const data = response.data;\n    const ids = data.map(game => game.id);\n    return ids;\n  } catch (error) {\n    console.error('Error fetching game IDs:', error);\n    return [];\n  }\n};\nexport const fetchPlayerPropsForGame = async gameId => {\n  while (currentKeyIndex < API_KEYS.length) {\n    try {\n      const res = await fetch(`https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEYS[currentKeyIndex]}&regions=au&markets=player_assists`);\n      if (res.status === 401) {\n        console.warn(`API key ${API_KEYS[currentKeyIndex]} unauthorized. Switching to next key.`);\n        currentKeyIndex++;\n      } else {\n        return await res.json();\n      }\n    } catch (error) {\n      console.error('Error fetching player props:', error);\n      throw error;\n    }\n  }\n  throw new Error('All API keys failed with 401');\n};","map":{"version":3,"names":["axios","API_ODDS_URL","API_EVENTS_URL","API_KEYS","currentKeyIndex","axiosWithKeyFallback","url","params","length","response","get","apiKey","error","status","console","warn","Error","fetchH2HOdds","regions","markets","data","fetchSpreadOdds","fetchTotalOdds","fetchGameIds","ids","map","game","id","fetchPlayerPropsForGame","gameId","res","fetch","json"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_ODDS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/odds/';\r\nconst API_EVENTS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/events/';\r\nconst API_KEYS = [\r\n  'b52a9454e4debad17c2d97210ef9e90c',\r\n  'e5353f118308573f9d6e8af041131ffe',\r\n];\r\n\r\nlet currentKeyIndex = 0;\r\n\r\nconst axiosWithKeyFallback = async (url: string, params: any) => {\r\n  while (currentKeyIndex < API_KEYS.length) {\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params: {\r\n          ...params,\r\n          apiKey: API_KEYS[currentKeyIndex],\r\n        },\r\n      });\r\n      return response;\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 401) {\r\n        console.warn(`API key ${API_KEYS[currentKeyIndex]} unauthorized. Switching to next key.`);\r\n        currentKeyIndex++;\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n  throw new Error('All API keys failed with 401');\r\n};\r\n\r\nexport const fetchH2HOdds = async () => {\r\n  try {\r\n    const response = await axiosWithKeyFallback(API_ODDS_URL, {\r\n      regions: 'au',\r\n      markets: 'h2h',\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching H2H odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchSpreadOdds = async () => {\r\n  try {\r\n    const response = await axiosWithKeyFallback(API_ODDS_URL, {\r\n      regions: 'au',\r\n      markets: 'spreads',\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching spread odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchTotalOdds = async () => {\r\n  try {\r\n    const response = await axiosWithKeyFallback(API_ODDS_URL, {\r\n      regions: 'au',\r\n      markets: 'totals',\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching total odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchGameIds = async (): Promise<string[]> => {\r\n  try {\r\n    const response = await axiosWithKeyFallback(API_EVENTS_URL, {\r\n      regions: 'au',\r\n    });\r\n    const data = response.data;\r\n    const ids: string[] = data.map((game: any) => game.id);\r\n    return ids;\r\n  } catch (error) {\r\n    console.error('Error fetching game IDs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchPlayerPropsForGame = async (gameId: string) => {\r\n  while (currentKeyIndex < API_KEYS.length) {\r\n    try {\r\n      const res = await fetch(\r\n        `https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEYS[currentKeyIndex]}&regions=au&markets=player_assists`\r\n      );\r\n      if (res.status === 401) {\r\n        console.warn(`API key ${API_KEYS[currentKeyIndex]} unauthorized. Switching to next key.`);\r\n        currentKeyIndex++;\r\n      } else {\r\n        return await res.json();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching player props:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  throw new Error('All API keys failed with 401');\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,6DAA6D;AAClF,MAAMC,cAAc,GAAG,+DAA+D;AACtF,MAAMC,QAAQ,GAAG,CACf,kCAAkC,EAClC,kCAAkC,CACnC;AAED,IAAIC,eAAe,GAAG,CAAC;AAEvB,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,GAAW,EAAEC,MAAW,KAAK;EAC/D,OAAOH,eAAe,GAAGD,QAAQ,CAACK,MAAM,EAAE;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACJ,GAAG,EAAE;QACpCC,MAAM,EAAE;UACN,GAAGA,MAAM;UACTI,MAAM,EAAER,QAAQ,CAACC,eAAe;QAClC;MACF,CAAC,CAAC;MACF,OAAOK,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAU,EAAE;MACnB,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QACnDC,OAAO,CAACC,IAAI,CAAC,WAAWZ,QAAQ,CAACC,eAAe,CAAC,uCAAuC,CAAC;QACzFA,eAAe,EAAE;MACnB,CAAC,MAAM;QACL,MAAMQ,KAAK;MACb;IACF;EACF;EACA,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAAC;AACjD,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,oBAAoB,CAACJ,YAAY,EAAE;MACxDiB,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACW,IAAI;EACtB,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdE,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMJ,oBAAoB,CAACJ,YAAY,EAAE;MACxDiB,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACW,IAAI;EACtB,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdE,OAAO,CAACF,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMJ,oBAAoB,CAACJ,YAAY,EAAE;MACxDiB,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACW,IAAI;EACtB,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdE,OAAO,CAACF,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAA+B;EACzD,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMJ,oBAAoB,CAACH,cAAc,EAAE;MAC1DgB,OAAO,EAAE;IACX,CAAC,CAAC;IACF,MAAME,IAAI,GAAGX,QAAQ,CAACW,IAAI;IAC1B,MAAMI,GAAa,GAAGJ,IAAI,CAACK,GAAG,CAAEC,IAAS,IAAKA,IAAI,CAACC,EAAE,CAAC;IACtD,OAAOH,GAAG;EACZ,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdE,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMgB,uBAAuB,GAAG,MAAOC,MAAc,IAAK;EAC/D,OAAOzB,eAAe,GAAGD,QAAQ,CAACK,MAAM,EAAE;IACxC,IAAI;MACF,MAAMsB,GAAG,GAAG,MAAMC,KAAK,CACrB,gEAAgEF,MAAM,gBAAgB1B,QAAQ,CAACC,eAAe,CAAC,oCACjH,CAAC;MACD,IAAI0B,GAAG,CAACjB,MAAM,KAAK,GAAG,EAAE;QACtBC,OAAO,CAACC,IAAI,CAAC,WAAWZ,QAAQ,CAACC,eAAe,CAAC,uCAAuC,CAAC;QACzFA,eAAe,EAAE;MACnB,CAAC,MAAM;QACL,OAAO,MAAM0B,GAAG,CAACE,IAAI,CAAC,CAAC;MACzB;IACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF;EACA,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAAC;AACjD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}