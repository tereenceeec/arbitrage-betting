{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teren\\\\Documents\\\\GitHub\\\\arbitrage-betting\\\\src\\\\pages\\\\playerProps.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchGameIds, fetchPlayerPropsForGame } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerProps = () => {\n  _s();\n  const [playerProps, setPlayerProps] = useState([]);\n  useEffect(() => {\n    const loadPlayerProps = async () => {\n      try {\n        const ids = await fetchGameIds();\n\n        // Fetch all player props in parallel for each game\n        const propPromises = ids.map(id => fetchPlayerPropsForGame(id));\n        const propsData = await Promise.all(propPromises);\n        setPlayerProps(propsData);\n        console.log('All player props:', propsData);\n      } catch (error) {\n        console.error('Failed to fetch player props:', error);\n      }\n    };\n    loadPlayerProps();\n  }, []);\n  const renderPlayerProps = game => {\n    var _game$bookmakers;\n    const playerData = {};\n\n    // Organize data by player\n    (_game$bookmakers = game.bookmakers) === null || _game$bookmakers === void 0 ? void 0 : _game$bookmakers.forEach(bookmaker => {\n      bookmaker.markets.forEach(market => {\n        if (market.key === 'player_assists') {\n          market.outcomes.forEach(outcome => {\n            if (!playerData[outcome.description]) {\n              playerData[outcome.description] = [];\n            }\n            playerData[outcome.description].push({\n              bookmaker: bookmaker.title,\n              name: outcome.name,\n              price: outcome.price,\n              points: outcome.point\n            });\n          });\n        }\n      });\n    });\n    return Object.keys(playerData).map(playerName => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: playerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), playerData[playerName].map((odd, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: odd.bookmaker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [odd.name, \": \", odd.price, \" (Points: \", odd.points, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, playerName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player Props\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), playerProps.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : playerProps.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [game.home_team, \" vs \", game.away_team]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), renderPlayerProps(game)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProps, \"nIV23g/cNYhBEVf/P9UGzm8Qb8g=\");\n_c = PlayerProps;\nexport default PlayerProps;\nvar _c;\n$RefreshReg$(_c, \"PlayerProps\");","map":{"version":3,"names":["React","useEffect","useState","fetchGameIds","fetchPlayerPropsForGame","jsxDEV","_jsxDEV","PlayerProps","_s","playerProps","setPlayerProps","loadPlayerProps","ids","propPromises","map","id","propsData","Promise","all","console","log","error","renderPlayerProps","game","_game$bookmakers","playerData","bookmakers","forEach","bookmaker","markets","market","key","outcomes","outcome","description","push","title","name","price","points","point","Object","keys","playerName","style","marginBottom","padding","border","children","fileName","_jsxFileName","lineNumber","columnNumber","odd","index","length","home_team","away_team","_c","$RefreshReg$"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/pages/playerProps.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchGameIds, fetchPlayerPropsForGame } from '../api';\r\n\r\nconst PlayerProps = () => {\r\n  const [playerProps, setPlayerProps] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const loadPlayerProps = async () => {\r\n      try {\r\n        const ids = await fetchGameIds();\r\n\r\n        // Fetch all player props in parallel for each game\r\n        const propPromises = ids.map((id) => fetchPlayerPropsForGame(id));\r\n        const propsData = await Promise.all(propPromises);\r\n\r\n        setPlayerProps(propsData);\r\n        console.log('All player props:', propsData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch player props:', error);\r\n      }\r\n    };\r\n\r\n    loadPlayerProps();\r\n  }, []);\r\n\r\n  const renderPlayerProps = (game: any) => {\r\n    const playerData: { [key: string]: any } = {};\r\n\r\n    // Organize data by player\r\n    game.bookmakers?.forEach((bookmaker: any) => {\r\n      bookmaker.markets.forEach((market: any) => {\r\n        if (market.key === 'player_assists') {\r\n          market.outcomes.forEach((outcome: any) => {\r\n            if (!playerData[outcome.description]) {\r\n              playerData[outcome.description] = [];\r\n            }\r\n            playerData[outcome.description].push({\r\n              bookmaker: bookmaker.title,\r\n              name: outcome.name,\r\n              price: outcome.price,\r\n              points: outcome.point,\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    return Object.keys(playerData).map((playerName) => (\r\n      <div key={playerName} style={{ marginBottom: '1rem', padding: '1rem', border: '1px solid #ccc' }}>\r\n        <h4>{playerName}</h4>\r\n        {playerData[playerName].map((odd: any, index: number) => (\r\n          <div key={index} style={{ marginBottom: '10px' }}>\r\n            <strong>{odd.bookmaker}</strong>\r\n            <ul>\r\n              <li>\r\n                {odd.name}: {odd.price} (Points: {odd.points})\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Player Props</h2>\r\n      {playerProps.length === 0 ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        playerProps.map((game, index) => (\r\n          <div key={index} style={{ marginBottom: '1rem', padding: '1rem', border: '1px solid #ccc' }}>\r\n            <h3>{game.home_team} vs {game.away_team}</h3>\r\n            {renderPlayerProps(game)}\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerProps;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}