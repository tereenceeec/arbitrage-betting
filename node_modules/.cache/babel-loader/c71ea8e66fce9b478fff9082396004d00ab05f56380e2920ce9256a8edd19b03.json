{"ast":null,"code":"import React,{useEffect,useState}from'react';import{fetchOdds}from'../api';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const App=()=>{const[odds,setOdds]=useState([]);useEffect(()=>{const getOdds=async()=>{try{const data=await fetchOdds();setOdds(data);}catch(error){console.error('Failed to fetch odds:',error);}};getOdds();},[]);// Function to calculate implied probability\nconst calculateImpliedProbability=odds=>{return 1/odds;};// Function to check for arbitrage opportunities\nconst checkArbitrage=(homeOdds,awayOdds)=>{const homeProb=calculateImpliedProbability(homeOdds);const awayProb=calculateImpliedProbability(awayOdds);return homeProb+awayProb<1;// Arbitrage if the total probability is less than 1\n};// Function to find outcomes for a given market (H2H, spreads, totals)\nconst findOutcomes=(markets,marketType,teamName)=>{const market=markets.find(m=>m.key===marketType);if(market){return market.outcomes.find(o=>o.name===teamName);}return null;};const arbitrageBets=[];const totalsBets=[];odds.forEach(game=>{game.bookmakers.forEach(homeBookmaker=>{game.bookmakers.forEach(awayBookmaker=>{// Only check arbitrage if bookmakers are different\nif(homeBookmaker.key!==awayBookmaker.key){// Check for arbitrage in H2H market\nconst homeH2H=findOutcomes(homeBookmaker.markets,'h2h',game.home_team);const awayH2H=findOutcomes(awayBookmaker.markets,'h2h',game.away_team);const homeSpread=findOutcomes(homeBookmaker.markets,'spreads',game.home_team);const awaySpread=findOutcomes(awayBookmaker.markets,'spreads',game.away_team);const homeTotal=findOutcomes(homeBookmaker.markets,'totals',game.home_team);const awayTotal=findOutcomes(awayBookmaker.markets,'totals',game.away_team);// Check for arbitrage in H2H market\nif(homeH2H&&awayH2H){const homeOddsH2H=homeH2H.price;const awayOddsH2H=awayH2H.price;if(checkArbitrage(homeOddsH2H,awayOddsH2H)){arbitrageBets.push(/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[homeBookmaker.title,\" (Home) vs \",awayBookmaker.title,\" (Away) - H2H\"]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[game.home_team,\": \",homeOddsH2H]}),/*#__PURE__*/_jsxs(\"li\",{children:[game.away_team,\": \",awayOddsH2H]}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Arbitrage Opportunity!\"})})]})]},`${homeBookmaker.key}-${awayBookmaker.key}-H2H`));}}// Check for arbitrage in Spreads market\nif(homeSpread&&awaySpread){const homeOddsSpread=homeSpread.price;const awayOddsSpread=awaySpread.price;if(checkArbitrage(homeOddsSpread,awayOddsSpread)){arbitrageBets.push(/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[homeBookmaker.title,\" (Home) vs \",awayBookmaker.title,\" (Away) - Spreads\"]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[game.home_team,\": \",homeOddsSpread]}),/*#__PURE__*/_jsxs(\"li\",{children:[game.away_team,\": \",awayOddsSpread]}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Arbitrage Opportunity!\"})})]})]},`${homeBookmaker.key}-${awayBookmaker.key}-Spreads`));}}// Check for arbitrage in Totals market\nif(homeTotal&&awayTotal){const homeOddsTotal=homeTotal.price;const awayOddsTotal=awayTotal.price;if(checkArbitrage(homeOddsTotal,awayOddsTotal)){arbitrageBets.push(/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[homeBookmaker.title,\" (Home) vs \",awayBookmaker.title,\" (Away) - Totals\"]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[game.home_team,\": \",homeOddsTotal]}),/*#__PURE__*/_jsxs(\"li\",{children:[game.away_team,\": \",awayOddsTotal]}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Arbitrage Opportunity!\"})})]})]},`${homeBookmaker.key}-${awayBookmaker.key}-Totals`));}}// Add totals to the separate list (regardless of arbitrage)\nif(homeTotal||awayTotal){totalsBets.push(/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[homeBookmaker.title,\" (Home) vs \",awayBookmaker.title,\" (Away) - Totals\"]}),/*#__PURE__*/_jsxs(\"ul\",{children:[homeTotal?/*#__PURE__*/_jsxs(\"li\",{children:[game.home_team,\": \",homeTotal.price]}):null,awayTotal?/*#__PURE__*/_jsxs(\"li\",{children:[game.away_team,\": \",awayTotal.price]}):null]})]},`${homeBookmaker.key}-${awayBookmaker.key}-Totals`));}}});});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"NBA Arbitrage Odds\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Arbitrage Bets\"}),/*#__PURE__*/_jsx(\"ul\",{children:arbitrageBets.length>0?arbitrageBets:/*#__PURE__*/_jsx(\"li\",{children:\"No arbitrage opportunities found.\"})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Total Stats\"}),/*#__PURE__*/_jsx(\"ul\",{children:totalsBets.length>0?totalsBets:/*#__PURE__*/_jsx(\"li\",{children:\"No totals bets found.\"})})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","fetchOdds","jsxs","_jsxs","jsx","_jsx","App","odds","setOdds","getOdds","data","error","console","calculateImpliedProbability","checkArbitrage","homeOdds","awayOdds","homeProb","awayProb","findOutcomes","markets","marketType","teamName","market","find","m","key","outcomes","o","name","arbitrageBets","totalsBets","forEach","game","bookmakers","homeBookmaker","awayBookmaker","homeH2H","home_team","awayH2H","away_team","homeSpread","awaySpread","homeTotal","awayTotal","homeOddsH2H","price","awayOddsH2H","push","children","title","homeOddsSpread","awayOddsSpread","homeOddsTotal","awayOddsTotal","length"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/components/App.tsx"],"sourcesContent":["import React, { JSX, useEffect, useState } from 'react';\nimport { fetchOdds } from '../api';\n\nconst App = () => {\n  interface Game {\n    home_team: string;\n    away_team: string;\n    bookmakers: Array<{\n      key: string;\n      title: string;\n      markets: Array<{\n        key: string;\n        outcomes: Array<{\n          name: string;\n          price: number;\n        }>;\n      }>;\n    }>;\n  }\n\n  const [odds, setOdds] = useState<Game[]>([]);\n\n  useEffect(() => {\n    const getOdds = async () => {\n      try {\n        const data = await fetchOdds();\n        setOdds(data);\n      } catch (error) {\n        console.error('Failed to fetch odds:', error);\n      }\n    };\n\n    getOdds();\n  }, []);\n\n  // Function to calculate implied probability\n  const calculateImpliedProbability = (odds: number) => {\n    return 1 / odds;\n  };\n\n  // Function to check for arbitrage opportunities\n  const checkArbitrage = (homeOdds: number, awayOdds: number) => {\n    const homeProb = calculateImpliedProbability(homeOdds);\n    const awayProb = calculateImpliedProbability(awayOdds);\n    return homeProb + awayProb < 1;  // Arbitrage if the total probability is less than 1\n  };\n\n  // Function to find outcomes for a given market (H2H, spreads, totals)\n  const findOutcomes = (\n    markets: Array<{ key: string; outcomes: Array<{ name: string; price: number }> }>,\n    marketType: string,\n    teamName: string\n  ) => {\n    const market = markets.find(m => m.key === marketType);\n    if (market) {\n      return market.outcomes.find((o: { name: string; price: number }) => o.name === teamName);\n    }\n    return null;\n  };\n\n  const arbitrageBets: JSX.Element[] = [];\n  const totalsBets: JSX.Element[] = [];\n\n  odds.forEach((game) => {\n    game.bookmakers.forEach((homeBookmaker) => {\n      game.bookmakers.forEach((awayBookmaker) => {\n        // Only check arbitrage if bookmakers are different\n        if (homeBookmaker.key !== awayBookmaker.key) {\n          // Check for arbitrage in H2H market\n          const homeH2H = findOutcomes(homeBookmaker.markets, 'h2h', game.home_team);\n          const awayH2H = findOutcomes(awayBookmaker.markets, 'h2h', game.away_team);\n          const homeSpread = findOutcomes(homeBookmaker.markets, 'spreads', game.home_team);\n          const awaySpread = findOutcomes(awayBookmaker.markets, 'spreads', game.away_team);\n          const homeTotal = findOutcomes(homeBookmaker.markets, 'totals', game.home_team);\n          const awayTotal = findOutcomes(awayBookmaker.markets, 'totals', game.away_team);\n\n          // Check for arbitrage in H2H market\n          if (homeH2H && awayH2H) {\n            const homeOddsH2H = homeH2H.price;\n            const awayOddsH2H = awayH2H.price;\n            if (checkArbitrage(homeOddsH2H, awayOddsH2H)) {\n              arbitrageBets.push(\n                <li key={`${homeBookmaker.key}-${awayBookmaker.key}-H2H`}>\n                  <strong>{homeBookmaker.title} (Home) vs {awayBookmaker.title} (Away) - H2H</strong>\n                  <ul>\n                    <li>{game.home_team}: {homeOddsH2H}</li>\n                    <li>{game.away_team}: {awayOddsH2H}</li>\n                    <li><strong>Arbitrage Opportunity!</strong></li>\n                  </ul>\n                </li>\n              );\n            }\n          }\n\n          // Check for arbitrage in Spreads market\n          if (homeSpread && awaySpread) {\n            const homeOddsSpread = homeSpread.price;\n            const awayOddsSpread = awaySpread.price;\n            if (checkArbitrage(homeOddsSpread, awayOddsSpread)) {\n              arbitrageBets.push(\n                <li key={`${homeBookmaker.key}-${awayBookmaker.key}-Spreads`}>\n                  <strong>{homeBookmaker.title} (Home) vs {awayBookmaker.title} (Away) - Spreads</strong>\n                  <ul>\n                    <li>{game.home_team}: {homeOddsSpread}</li>\n                    <li>{game.away_team}: {awayOddsSpread}</li>\n                    <li><strong>Arbitrage Opportunity!</strong></li>\n                  </ul>\n                </li>\n              );\n            }\n          }\n\n          // Check for arbitrage in Totals market\n          if (homeTotal && awayTotal) {\n            const homeOddsTotal = homeTotal.price;\n            const awayOddsTotal = awayTotal.price;\n            if (checkArbitrage(homeOddsTotal, awayOddsTotal)) {\n              arbitrageBets.push(\n                <li key={`${homeBookmaker.key}-${awayBookmaker.key}-Totals`}>\n                  <strong>{homeBookmaker.title} (Home) vs {awayBookmaker.title} (Away) - Totals</strong>\n                  <ul>\n                    <li>{game.home_team}: {homeOddsTotal}</li>\n                    <li>{game.away_team}: {awayOddsTotal}</li>\n                    <li><strong>Arbitrage Opportunity!</strong></li>\n                  </ul>\n                </li>\n              );\n            }\n          }\n\n          // Add totals to the separate list (regardless of arbitrage)\n          if (homeTotal || awayTotal) {\n            totalsBets.push(\n              <li key={`${homeBookmaker.key}-${awayBookmaker.key}-Totals`}>\n                <strong>{homeBookmaker.title} (Home) vs {awayBookmaker.title} (Away) - Totals</strong>\n                <ul>\n                  {homeTotal ? <li>{game.home_team}: {homeTotal.price}</li> : null}\n                  {awayTotal ? <li>{game.away_team}: {awayTotal.price}</li> : null}\n                </ul>\n              </li>\n            );\n          }\n        }\n      });\n    });\n  });\n\n  return (\n    <div>\n      <h1>NBA Arbitrage Odds</h1>\n      <h2>Arbitrage Bets</h2>\n      <ul>\n        {arbitrageBets.length > 0 ? arbitrageBets : <li>No arbitrage opportunities found.</li>}\n      </ul>\n      \n      <h2>Total Stats</h2>\n      <ul>\n        {totalsBets.length > 0 ? totalsBets : <li>No totals bets found.</li>}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}