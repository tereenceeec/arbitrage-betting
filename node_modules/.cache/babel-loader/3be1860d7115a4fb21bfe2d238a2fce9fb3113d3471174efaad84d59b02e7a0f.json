{"ast":null,"code":"import axios from'axios';const API_ODDS_URL='https://api.the-odds-api.com/v4/sports/basketball_nba/odds/';const API_EVENTS_URL='https://api.the-odds-api.com/v4/sports/basketball_nba/events/';const API_KEY=['b52a9454e4debad17c2d97210ef9e90c','e5353f118308573f9d6e8af041131ffe','454e54ff8674e4ee4944ad3d6398d5c7','3a150273e700425461b272f525879a27','296097ed38f27f86c4a02719eb317b1c'];let currentKeyIndex=0;const handle401=async originalFunction=>{currentKeyIndex=(currentKeyIndex+1)%API_KEY.length;console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);return originalFunction();};export const fetchH2HOdds=async()=>{try{const response=await axios.get(API_ODDS_URL,{params:{regions:'au',markets:'h2h',apiKey:API_KEY[currentKeyIndex]}});return response.data;}catch(error){var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401)return handle401(fetchH2HOdds);console.error('Error fetching odds:',error);throw error;}};export const fetchSpreadOdds=async()=>{try{const response=await axios.get(API_ODDS_URL,{params:{regions:'au',markets:'spreads',apiKey:API_KEY[currentKeyIndex]}});return response.data;}catch(error){var _error$response2;if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401)return handle401(fetchSpreadOdds);console.error('Error fetching odds:',error);throw error;}};export const fetchTotalOdds=async()=>{try{const response=await axios.get(API_ODDS_URL,{params:{regions:'au',markets:'totals',apiKey:API_KEY[currentKeyIndex]}});return response.data;}catch(error){var _error$response3;if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===401)return handle401(fetchTotalOdds);console.error('Error fetching odds:',error);throw error;}};export const fetchGameIds=async()=>{try{const response=await axios.get(API_EVENTS_URL,{params:{regions:'au',apiKey:API_KEY[currentKeyIndex]}});const data=response.data;const ids=data.map(game=>game.id);return ids;}catch(error){var _error$response4;if(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)===401)return handle401(fetchGameIds);console.error('Error fetching game IDs:',error);return[];}};export const fetchPlayerPropsAssists=async gameId=>{try{const res=await fetch(`https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEY[currentKeyIndex]}&regions=au&markets=player_assists`);if(res.status===401){currentKeyIndex=(currentKeyIndex+1)%API_KEY.length;console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);return fetchPlayerPropsAssists(gameId);}return await res.json();}catch(error){console.error('Error fetching player props:',error);throw error;}};export const fetchPlayerPropsRebounds=async gameId=>{try{const res=await fetch(`https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEY[currentKeyIndex]}&regions=au&markets=player_rebounds`);if(res.status===401){currentKeyIndex=(currentKeyIndex+1)%API_KEY.length;console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);return fetchPlayerPropsRebounds(gameId);}return await res.json();}catch(error){console.error('Error fetching player props:',error);throw error;}};export const fetchPlayerPropsPoints=async gameId=>{try{const res=await fetch(`https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEY[currentKeyIndex]}&regions=au&markets=player_points`);if(res.status===401){currentKeyIndex=(currentKeyIndex+1)%API_KEY.length;console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);return fetchPlayerPropsPoints(gameId);}return await res.json();}catch(error){console.error('Error fetching player props:',error);throw error;}};","map":{"version":3,"names":["axios","API_ODDS_URL","API_EVENTS_URL","API_KEY","currentKeyIndex","handle401","originalFunction","length","console","warn","fetchH2HOdds","response","get","params","regions","markets","apiKey","data","error","_error$response","status","fetchSpreadOdds","_error$response2","fetchTotalOdds","_error$response3","fetchGameIds","ids","map","game","id","_error$response4","fetchPlayerPropsAssists","gameId","res","fetch","json","fetchPlayerPropsRebounds","fetchPlayerPropsPoints"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_ODDS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/odds/';\r\nconst API_EVENTS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/events/';\r\nconst API_KEY = [\r\n  'b52a9454e4debad17c2d97210ef9e90c',\r\n  'e5353f118308573f9d6e8af041131ffe',\r\n  '454e54ff8674e4ee4944ad3d6398d5c7',\r\n  '3a150273e700425461b272f525879a27',\r\n  '296097ed38f27f86c4a02719eb317b1c'\r\n];\r\n\r\nlet currentKeyIndex = 0;\r\n\r\nconst handle401 = async (originalFunction: () => Promise<any>) => {\r\n  currentKeyIndex = (currentKeyIndex + 1) % API_KEY.length;\r\n  console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);\r\n  return originalFunction();\r\n};\r\n\r\nexport const fetchH2HOdds = async () => {\r\n  try {\r\n    const response = await axios.get(API_ODDS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        markets: 'h2h',\r\n        apiKey: API_KEY[currentKeyIndex],\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    if (error.response?.status === 401) return handle401(fetchH2HOdds);\r\n    console.error('Error fetching odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchSpreadOdds = async () => {\r\n  try {\r\n    const response = await axios.get(API_ODDS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        markets: 'spreads',\r\n        apiKey: API_KEY[currentKeyIndex],\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    if (error.response?.status === 401) return handle401(fetchSpreadOdds);\r\n    console.error('Error fetching odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchTotalOdds = async () => {\r\n  try {\r\n    const response = await axios.get(API_ODDS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        markets: 'totals',\r\n        apiKey: API_KEY[currentKeyIndex],\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    if (error.response?.status === 401) return handle401(fetchTotalOdds);\r\n    console.error('Error fetching odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchGameIds = async (): Promise<string[]> => {\r\n  try {\r\n    const response = await axios.get(API_EVENTS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        apiKey: API_KEY[currentKeyIndex],\r\n      },\r\n    });\r\n    const data = response.data;\r\n    const ids: string[] = data.map((game: any) => game.id);\r\n    return ids;\r\n  } catch (error: any) {\r\n    if (error.response?.status === 401) return handle401(fetchGameIds);\r\n    console.error('Error fetching game IDs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchPlayerPropsAssists = async (gameId: string): Promise<any> => {\r\n  try {\r\n    const res = await fetch(\r\n      `https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEY[currentKeyIndex]}&regions=au&markets=player_assists`\r\n    );\r\n\r\n    if (res.status === 401) {\r\n      currentKeyIndex = (currentKeyIndex + 1) % API_KEY.length;\r\n      console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);\r\n      return fetchPlayerPropsAssists(gameId);\r\n    }\r\n\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error('Error fetching player props:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchPlayerPropsRebounds = async (gameId: string): Promise<any> => {\r\n  try {\r\n    const res = await fetch(\r\n      `https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEY[currentKeyIndex]}&regions=au&markets=player_rebounds`\r\n    );\r\n\r\n    if (res.status === 401) {\r\n      currentKeyIndex = (currentKeyIndex + 1) % API_KEY.length;\r\n      console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);\r\n      return fetchPlayerPropsRebounds(gameId);\r\n    }\r\n\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error('Error fetching player props:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchPlayerPropsPoints = async (gameId: string): Promise<any> => {\r\n  try {\r\n    const res = await fetch(\r\n      `https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEY[currentKeyIndex]}&regions=au&markets=player_points`\r\n    );\r\n\r\n    if (res.status === 401) {\r\n      currentKeyIndex = (currentKeyIndex + 1) % API_KEY.length;\r\n      console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);\r\n      return fetchPlayerPropsPoints(gameId);\r\n    }\r\n\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error('Error fetching player props:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}