{"ast":null,"code":"import axios from 'axios';\nconst API_ODDS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/odds/';\nconst API_EVENTS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/events/';\nconst API_KEY = ['b52a9454e4debad17c2d97210ef9e90c'\n// 'e5353f118308573f9d6e8af041131ffe',\n];\nlet currentKeyIndex = 0;\nconst handle401 = async originalFunction => {\n  currentKeyIndex = (currentKeyIndex + 1) % API_KEY.length;\n  console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);\n  return originalFunction();\n};\nexport const fetchH2HOdds = async () => {\n  try {\n    const response = await axios.get(API_ODDS_URL, {\n      params: {\n        regions: 'au',\n        markets: 'h2h',\n        apiKey: API_KEY[currentKeyIndex]\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) return handle401(fetchH2HOdds);\n    console.error('Error fetching odds:', error);\n    throw error;\n  }\n};\nexport const fetchSpreadOdds = async () => {\n  try {\n    const response = await axios.get(API_ODDS_URL, {\n      params: {\n        regions: 'au',\n        markets: 'spreads',\n        apiKey: API_KEY[currentKeyIndex]\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) return handle401(fetchSpreadOdds);\n    console.error('Error fetching odds:', error);\n    throw error;\n  }\n};\nexport const fetchTotalOdds = async () => {\n  try {\n    const response = await axios.get(API_ODDS_URL, {\n      params: {\n        regions: 'au',\n        markets: 'totals',\n        apiKey: API_KEY[currentKeyIndex]\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) return handle401(fetchTotalOdds);\n    console.error('Error fetching odds:', error);\n    throw error;\n  }\n};\nexport const fetchGameIds = async () => {\n  try {\n    const response = await axios.get(API_EVENTS_URL, {\n      params: {\n        regions: 'au',\n        apiKey: API_KEY[currentKeyIndex]\n      }\n    });\n    const data = response.data;\n    const ids = data.map(game => game.id);\n    return ids;\n  } catch (error) {\n    var _error$response4;\n    if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) return handle401(fetchGameIds);\n    console.error('Error fetching game IDs:', error);\n    return [];\n  }\n};\nexport const fetchPlayerPropsForGame = async gameId => {\n  try {\n    const res = await fetch(`https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEY[currentKeyIndex]}&regions=au&markets=player_assists`);\n    if (res.status === 401) {\n      currentKeyIndex = (currentKeyIndex + 1) % API_KEY.length;\n      console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);\n      return fetchPlayerPropsForGame(gameId);\n    }\n    return await res.json();\n  } catch (error) {\n    console.error('Error fetching player props:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_ODDS_URL","API_EVENTS_URL","API_KEY","currentKeyIndex","handle401","originalFunction","length","console","warn","fetchH2HOdds","response","get","params","regions","markets","apiKey","data","error","_error$response","status","fetchSpreadOdds","_error$response2","fetchTotalOdds","_error$response3","fetchGameIds","ids","map","game","id","_error$response4","fetchPlayerPropsForGame","gameId","res","fetch","json"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_ODDS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/odds/';\r\nconst API_EVENTS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/events/';\r\nconst API_KEY = [\r\n  'b52a9454e4debad17c2d97210ef9e90c',\r\n  // 'e5353f118308573f9d6e8af041131ffe',\r\n];\r\n\r\nlet currentKeyIndex = 0;\r\n\r\nconst handle401 = async (originalFunction: () => Promise<any>) => {\r\n  currentKeyIndex = (currentKeyIndex + 1) % API_KEY.length;\r\n  console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);\r\n  return originalFunction();\r\n};\r\n\r\nexport const fetchH2HOdds = async () => {\r\n  try {\r\n    const response = await axios.get(API_ODDS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        markets: 'h2h',\r\n        apiKey: API_KEY[currentKeyIndex],\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    if (error.response?.status === 401) return handle401(fetchH2HOdds);\r\n    console.error('Error fetching odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchSpreadOdds = async () => {\r\n  try {\r\n    const response = await axios.get(API_ODDS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        markets: 'spreads',\r\n        apiKey: API_KEY[currentKeyIndex],\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    if (error.response?.status === 401) return handle401(fetchSpreadOdds);\r\n    console.error('Error fetching odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchTotalOdds = async () => {\r\n  try {\r\n    const response = await axios.get(API_ODDS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        markets: 'totals',\r\n        apiKey: API_KEY[currentKeyIndex],\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    if (error.response?.status === 401) return handle401(fetchTotalOdds);\r\n    console.error('Error fetching odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchGameIds = async (): Promise<string[]> => {\r\n  try {\r\n    const response = await axios.get(API_EVENTS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        apiKey: API_KEY[currentKeyIndex],\r\n      },\r\n    });\r\n    const data = response.data;\r\n    const ids: string[] = data.map((game: any) => game.id);\r\n    return ids;\r\n  } catch (error: any) {\r\n    if (error.response?.status === 401) return handle401(fetchGameIds);\r\n    console.error('Error fetching game IDs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchPlayerPropsForGame = async (gameId: string): Promise<any> => {\r\n  try {\r\n    const res = await fetch(\r\n      `https://api.the-odds-api.com/v4/sports/basketball_nba/events/${gameId}/odds?apiKey=${API_KEY[currentKeyIndex]}&regions=au&markets=player_assists`\r\n    );\r\n\r\n    if (res.status === 401) {\r\n      currentKeyIndex = (currentKeyIndex + 1) % API_KEY.length;\r\n      console.warn(`API key ${API_KEY[currentKeyIndex]} unauthorized. Switching to next key.`);\r\n      return fetchPlayerPropsForGame(gameId);\r\n    }\r\n\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error('Error fetching player props:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}