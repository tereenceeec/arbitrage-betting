{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teren\\\\Documents\\\\GitHub\\\\arbitrage-betting\\\\src\\\\components\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchOdds } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [odds, setOdds] = useState([]);\n  useEffect(() => {\n    const getOdds = async () => {\n      try {\n        const data = await fetchOdds();\n        setOdds(data);\n      } catch (error) {\n        console.error('Failed to fetch odds:', error);\n      }\n    };\n    getOdds();\n  }, []);\n\n  // Function to calculate implied probability\n  const calculateImpliedProbability = odds => {\n    return 1 / odds;\n  };\n\n  // Function to check for arbitrage opportunities\n  const checkArbitrage = (homeOdds, awayOdds) => {\n    const homeProb = calculateImpliedProbability(homeOdds);\n    const awayProb = calculateImpliedProbability(awayOdds);\n    return homeProb + awayProb < 1;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NBA Arbitrage Odds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: odds.map((game, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [game.home_team, \" vs \", game.away_team]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: game.bookmakers.map(homeBookmaker => game.bookmakers.map(awayBookmaker => {\n            // Only check arbitrage if bookmakers are different\n            if (homeBookmaker.key !== awayBookmaker.key) {\n              var _homeBookmaker$market, _awayBookmaker$market;\n              // Find odds for home and away teams from different bookmakers\n              const homeOutcome = (_homeBookmaker$market = homeBookmaker.markets.find(market => market.key === \"h2h\")) === null || _homeBookmaker$market === void 0 ? void 0 : _homeBookmaker$market.outcomes.find(outcome => outcome.name === game.home_team);\n              const awayOutcome = (_awayBookmaker$market = awayBookmaker.markets.find(market => market.key === \"h2h\")) === null || _awayBookmaker$market === void 0 ? void 0 : _awayBookmaker$market.outcomes.find(outcome => outcome.name === game.away_team);\n\n              // If both home and away odds exist\n              if (homeOutcome && awayOutcome) {\n                const homeOdds = homeOutcome.price;\n                const awayOdds = awayOutcome.price;\n\n                // Check for arbitrage\n                if (checkArbitrage(homeOdds, awayOdds)) {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [homeBookmaker.title, \" (Home) vs \", awayBookmaker.title, \" (Away)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [game.home_team, \": \", homeOdds]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [game.away_team, \": \", awayOdds]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Arbitrage Opportunity!\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 79,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 29\n                    }, this)]\n                  }, `${homeBookmaker.key}-${awayBookmaker.key}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, this);\n                }\n              }\n            }\n            return null;\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"F/V+dxJ9GLNnNRYr+i2N0Lf480w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchOdds","jsxDEV","_jsxDEV","App","_s","odds","setOdds","getOdds","data","error","console","calculateImpliedProbability","checkArbitrage","homeOdds","awayOdds","homeProb","awayProb","children","fileName","_jsxFileName","lineNumber","columnNumber","map","game","index","home_team","away_team","bookmakers","homeBookmaker","awayBookmaker","key","_homeBookmaker$market","_awayBookmaker$market","homeOutcome","markets","find","market","outcomes","outcome","name","awayOutcome","price","title","_c","$RefreshReg$"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/components/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchOdds } from '../api';\n\nconst App = () => {\n  interface Game {\n    home_team: string;\n    away_team: string;\n    bookmakers: Array<{\n      key: string;\n      title: string;\n      markets: Array<{\n        key: string;\n        outcomes: Array<{\n          name: string;\n          price: number;\n        }>;\n      }>;\n    }>;\n  }\n\n  const [odds, setOdds] = useState<Game[]>([]);\n  \n  useEffect(() => {\n    const getOdds = async () => {\n      try {\n        const data = await fetchOdds();\n        setOdds(data);\n      } catch (error) {\n        console.error('Failed to fetch odds:', error);\n      }\n    };\n\n    getOdds();\n  }, []);\n\n  // Function to calculate implied probability\n  const calculateImpliedProbability = (odds: number) => {\n    return 1 / odds;\n  };\n\n  // Function to check for arbitrage opportunities\n  const checkArbitrage = (homeOdds: number, awayOdds: number) => {\n    const homeProb = calculateImpliedProbability(homeOdds);\n    const awayProb = calculateImpliedProbability(awayOdds);\n    return homeProb + awayProb < 1;\n  };\n\n  return (\n    <div>\n      <h1>NBA Arbitrage Odds</h1>\n      <ul>\n        {odds.map((game, index) => (\n          <li key={index}>\n            <h3>\n              {game.home_team} vs {game.away_team}\n            </h3>\n            <ul>\n              {game.bookmakers.map((homeBookmaker) => (\n                game.bookmakers.map((awayBookmaker) => {\n                  // Only check arbitrage if bookmakers are different\n                  if (homeBookmaker.key !== awayBookmaker.key) {\n                    // Find odds for home and away teams from different bookmakers\n                    const homeOutcome = homeBookmaker.markets.find(market => market.key === \"h2h\")?.outcomes.find(outcome => outcome.name === game.home_team);\n                    const awayOutcome = awayBookmaker.markets.find(market => market.key === \"h2h\")?.outcomes.find(outcome => outcome.name === game.away_team);\n\n                    // If both home and away odds exist\n                    if (homeOutcome && awayOutcome) {\n                      const homeOdds = homeOutcome.price;\n                      const awayOdds = awayOutcome.price;\n\n                      // Check for arbitrage\n                      if (checkArbitrage(homeOdds, awayOdds)) {\n                        return (\n                          <li key={`${homeBookmaker.key}-${awayBookmaker.key}`}>\n                            <strong>{homeBookmaker.title} (Home) vs {awayBookmaker.title} (Away)</strong>\n                            <ul>\n                              <li>{game.home_team}: {homeOdds}</li>\n                              <li>{game.away_team}: {awayOdds}</li>\n                              <li><strong>Arbitrage Opportunity!</strong></li>\n                            </ul>\n                          </li>\n                        );\n                      }\n                    }\n                  }\n                  return null;\n                })\n              ))}\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}