{"ast":null,"code":"import axios from 'axios';\nconst API_ODDS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/odds/';\nconst API_EVENTS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/events/';\nconst API_KEY = 'b52a9454e4debad17c2d97210ef9e90c';\nexport const fetchH2HOdds = async () => {\n  try {\n    const response = await axios.get(API_ODDS_URL, {\n      params: {\n        regions: 'au',\n        markets: 'h2h',\n        apiKey: API_KEY\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching odds:', error);\n    throw error;\n  }\n};\nexport const fetchSpreadOdds = async () => {\n  try {\n    const response = await axios.get(API_ODDS_URL, {\n      params: {\n        regions: 'au',\n        markets: 'spreads',\n        apiKey: API_KEY\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching odds:', error);\n    throw error;\n  }\n};\nexport const fetchTotalOdds = async () => {\n  try {\n    const response = await axios.get(API_ODDS_URL, {\n      params: {\n        regions: 'au',\n        markets: 'totals',\n        apiKey: API_KEY\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching odds:', error);\n    throw error;\n  }\n};\nconst fetchGameIds = async () => {\n  try {\n    const response = await axios.get(API_EVENTS_URL, {\n      params: {\n        regions: 'au',\n        apiKey: API_KEY\n      }\n    });\n    const data = response.data;\n    const ids = data.map(game => game.id);\n    return ids;\n  } catch (error) {\n    console.error('Error fetching game IDs:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","API_ODDS_URL","API_EVENTS_URL","API_KEY","fetchH2HOdds","response","get","params","regions","markets","apiKey","data","error","console","fetchSpreadOdds","fetchTotalOdds","fetchGameIds","ids","map","game","id"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_ODDS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/odds/';\r\nconst API_EVENTS_URL = 'https://api.the-odds-api.com/v4/sports/basketball_nba/events/'\r\nconst API_KEY = 'b52a9454e4debad17c2d97210ef9e90c';\r\n\r\nexport const fetchH2HOdds = async () => {\r\n  try {\r\n    const response = await axios.get(API_ODDS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        markets: 'h2h',\r\n        apiKey: API_KEY,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchSpreadOdds = async () => {\r\n  try {\r\n    const response = await axios.get(API_ODDS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        markets: 'spreads',\r\n        apiKey: API_KEY,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchTotalOdds = async () => {\r\n  try {\r\n    const response = await axios.get(API_ODDS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        markets: 'totals',\r\n        apiKey: API_KEY,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching odds:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst fetchGameIds = async (): Promise<string[]> => {\r\n  try {\r\n    const response = await axios.get(API_EVENTS_URL, {\r\n      params: {\r\n        regions: 'au',\r\n        apiKey: API_KEY,\r\n      },\r\n    });\r\n    const data = response.data;\r\n\r\n    const ids: string[] = data.map((game: any) => game.id);\r\n    return ids;\r\n  } catch (error) {\r\n    console.error('Error fetching game IDs:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,6DAA6D;AAClF,MAAMC,cAAc,GAAG,+DAA+D;AACtF,MAAMC,OAAO,GAAG,kCAAkC;AAElD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACL,YAAY,EAAE;MAC7CM,MAAM,EAAE;QACNC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,KAAK;QACdC,MAAM,EAAEP;MACV;IACF,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACL,YAAY,EAAE;MAC7CM,MAAM,EAAE;QACNC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,SAAS;QAClBC,MAAM,EAAEP;MACV;IACF,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACL,YAAY,EAAE;MAC7CM,MAAM,EAAE;QACNC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,QAAQ;QACjBC,MAAM,EAAEP;MACV;IACF,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAA+B;EAClD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACJ,cAAc,EAAE;MAC/CK,MAAM,EAAE;QACNC,OAAO,EAAE,IAAI;QACbE,MAAM,EAAEP;MACV;IACF,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAGN,QAAQ,CAACM,IAAI;IAE1B,MAAMM,GAAa,GAAGN,IAAI,CAACO,GAAG,CAAEC,IAAS,IAAKA,IAAI,CAACC,EAAE,CAAC;IACtD,OAAOH,GAAG;EACZ,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}