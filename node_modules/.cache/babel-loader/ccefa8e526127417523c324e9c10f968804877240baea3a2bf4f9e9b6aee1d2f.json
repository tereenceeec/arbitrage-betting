{"ast":null,"code":"import React,{useEffect,useState}from'react';import{fetchH2HOdds,fetchSpreadOdds,fetchTotalOdds}from'../api';import{renderArbitrageBets}from'../components/functions/renderArbitrageBets';import{renderOdds}from'../components/functions/renderOdds';import{Box,Heading,Divider,Flex}from'@chakra-ui/react';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const H2hSpreadTotal=()=>{const[h2hOdds,setH2HOdds]=useState([]);const[spreadOdds,setSpreadOdds]=useState([]);const[totalOdds,setTotalOdds]=useState([]);useEffect(()=>{const getOdds=async()=>{try{const h2hData=await fetchH2HOdds();const spreadData=await fetchSpreadOdds();const totalData=await fetchTotalOdds();setH2HOdds(h2hData);setSpreadOdds(spreadData);setTotalOdds(totalData);}catch(error){console.error('Failed to fetch odds:',error);}};getOdds();},[]);const h2hArbs=renderArbitrageBets(h2hOdds,'h2h');const spreadArbs=renderArbitrageBets(spreadOdds,'spreads');const totalArbs=renderArbitrageBets(totalOdds,'totals');return/*#__PURE__*/_jsx(Flex,{gap:6,justify:\"space-between\",w:\"100%\",children:[{label:'H2H',arbs:h2hArbs,odds:h2hOdds,key:'h2h'},{label:'Spread',arbs:spreadArbs,odds:spreadOdds,key:'spreads'},{label:'Total',arbs:totalArbs,odds:totalOdds,key:'totals'}].map(_ref=>{let{label,arbs,odds,key}=_ref;return/*#__PURE__*/_jsxs(Box,{w:\"33%\",children:[/*#__PURE__*/_jsxs(Heading,{as:\"h2\",size:\"md\",mb:3,color:\"teal.800\",children:[label,\" Arbitrage\"]}),/*#__PURE__*/_jsx(Flex,{direction:\"column\",gap:4,mb:6,children:arbs.length?arbs.map((arb,index)=>/*#__PURE__*/_jsx(Box,{children:arb},index)):/*#__PURE__*/_jsx(Box,{p:4,textAlign:\"center\",border:\"1px dashed\",borderColor:\"gray.300\",borderRadius:\"md\",color:\"gray.500\",children:\"No arbitrage found.\"})}),/*#__PURE__*/_jsx(Divider,{borderColor:\"teal.300\",mb:4}),/*#__PURE__*/_jsxs(Heading,{as:\"h2\",size:\"md\",mb:3,color:\"teal.800\",children:[label,\" Odds\"]}),/*#__PURE__*/_jsx(Flex,{direction:\"column\",gap:4,children:renderOdds(odds,key)})]},key);})});};export default H2hSpreadTotal;","map":{"version":3,"names":["React","useEffect","useState","fetchH2HOdds","fetchSpreadOdds","fetchTotalOdds","renderArbitrageBets","renderOdds","Box","Heading","Divider","Flex","jsxs","_jsxs","jsx","_jsx","H2hSpreadTotal","h2hOdds","setH2HOdds","spreadOdds","setSpreadOdds","totalOdds","setTotalOdds","getOdds","h2hData","spreadData","totalData","error","console","h2hArbs","spreadArbs","totalArbs","gap","justify","w","children","label","arbs","odds","key","map","_ref","as","size","mb","color","direction","length","arb","index","p","textAlign","border","borderColor","borderRadius"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/pages/h2hSpreadTotal.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchH2HOdds, fetchSpreadOdds, fetchTotalOdds } from '../api';\r\nimport { renderArbitrageBets, Game } from '../components/functions/renderArbitrageBets';\r\nimport { renderOdds } from '../components/functions/renderOdds';\r\nimport { Box, Heading, Divider, Flex } from '@chakra-ui/react';\r\n\r\nconst H2hSpreadTotal = () => {\r\n  const [h2hOdds, setH2HOdds] = useState<Game[]>([]);\r\n  const [spreadOdds, setSpreadOdds] = useState<Game[]>([]);\r\n  const [totalOdds, setTotalOdds] = useState<Game[]>([]);\r\n\r\n  useEffect(() => {\r\n    const getOdds = async () => {\r\n      try {\r\n        const h2hData = await fetchH2HOdds();\r\n        const spreadData = await fetchSpreadOdds();\r\n        const totalData = await fetchTotalOdds();\r\n\r\n        setH2HOdds(h2hData);\r\n        setSpreadOdds(spreadData);\r\n        setTotalOdds(totalData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch odds:', error);\r\n      }\r\n    };\r\n\r\n    getOdds();\r\n  }, []);\r\n\r\n  const h2hArbs = renderArbitrageBets(h2hOdds, 'h2h');\r\n  const spreadArbs = renderArbitrageBets(spreadOdds, 'spreads');\r\n  const totalArbs = renderArbitrageBets(totalOdds, 'totals');\r\n\r\n  return (\r\n    <Flex gap={6} justify=\"space-between\" w=\"100%\">\r\n      {/* Section Template */}\r\n      {[\r\n        { label: 'H2H', arbs: h2hArbs, odds: h2hOdds, key: 'h2h' },\r\n        { label: 'Spread', arbs: spreadArbs, odds: spreadOdds, key: 'spreads' },\r\n        { label: 'Total', arbs: totalArbs, odds: totalOdds, key: 'totals' },\r\n      ].map(({ label, arbs, odds, key }) => (\r\n        <Box key={key} w=\"33%\">\r\n          <Heading as=\"h2\" size=\"md\" mb={3} color=\"teal.800\">\r\n            {label} Arbitrage\r\n          </Heading>\r\n          <Flex direction=\"column\" gap={4} mb={6}>\r\n            {arbs.length ? (\r\n              arbs.map((arb, index) => (\r\n                <Box\r\n                  key={index}\r\n                >\r\n                  {arb}\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <Box\r\n                p={4}\r\n                textAlign=\"center\"\r\n                border=\"1px dashed\"\r\n                borderColor=\"gray.300\"\r\n                borderRadius=\"md\"\r\n                color=\"gray.500\"\r\n              >\r\n                No arbitrage found.\r\n              </Box>\r\n            )}\r\n          </Flex>\r\n\r\n          <Divider borderColor=\"teal.300\" mb={4} />\r\n\r\n          <Heading as=\"h2\" size=\"md\" mb={3} color=\"teal.800\">\r\n            {label} Odds\r\n          </Heading>\r\n          <Flex direction=\"column\" gap={4}>\r\n            {renderOdds(odds, key)}\r\n          </Flex>\r\n        </Box>\r\n      ))}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default H2hSpreadTotal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}