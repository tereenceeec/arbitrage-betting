{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teren\\\\Documents\\\\GitHub\\\\arbitrage-betting\\\\src\\\\components\\\\functions\\\\renderPlayerPropsArbitrage.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateImpliedProbability = odds => 1 / odds;\nconst checkArbitrage = (overOdds, underOdds) => {\n  const probOver = calculateImpliedProbability(overOdds);\n  const probUnder = calculateImpliedProbability(underOdds);\n  return probOver + probUnder < 1;\n};\nconst extractPlayerAssists = markets => markets === null || markets === void 0 ? void 0 : markets.find(m => m.key === 'player_assists');\nexport const renderPlayerPropsArbitrageBets = games => {\n  const playerPropsArbitrage = [];\n  games.forEach(game => {\n    const players = {};\n    game.bookmakers.forEach(bookmaker => {\n      const assistMarket = extractPlayerAssists(bookmaker.markets);\n      if (!assistMarket) return;\n      assistMarket.outcomes.forEach(outcome => {\n        const playerName = outcome.description;\n        if (!players[playerName]) players[playerName] = {};\n        if (!players[playerName][bookmaker.title]) players[playerName][bookmaker.title] = {};\n        if (outcome.name === 'Over') {\n          players[playerName][bookmaker.title].over = outcome;\n        } else if (outcome.name === 'Under') {\n          players[playerName][bookmaker.title].under = outcome;\n        }\n      });\n    });\n    Object.entries(players).forEach(([playerName, books]) => {\n      const bookmakers = Object.entries(books);\n      for (let i = 0; i < bookmakers.length; i++) {\n        const [bk1, odds1] = bookmakers[i];\n        for (let j = 0; j < bookmakers.length; j++) {\n          if (i === j) continue;\n          const [bk2, odds2] = bookmakers[j];\n          if (odds1.over && odds2.under && checkArbitrage(odds1.over.price, odds2.under.price)) {\n            playerPropsArbitrage.push(/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [game.home_team, \" vs \", game.away_team]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 70\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: playerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), \" (Assists Market)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 63\n              }, this), bk1, \" (Over): \", odds1.over.price, \" (Line: \", odds1.over.point, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 76\n              }, this), bk2, \" (Under): \", odds2.under.price, \" (Line: \", odds2.under.point, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 79\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"Arbitrage Opportunity!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, `${game.home_team}-${game.away_team}-${playerName}-${bk1}-${bk2}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this));\n          }\n        }\n      }\n    });\n  });\n  return playerPropsArbitrage;\n};","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","calculateImpliedProbability","odds","checkArbitrage","overOdds","underOdds","probOver","probUnder","extractPlayerAssists","markets","find","m","key","renderPlayerPropsArbitrageBets","games","playerPropsArbitrage","forEach","game","players","bookmakers","bookmaker","assistMarket","outcomes","outcome","playerName","description","title","name","over","under","Object","entries","books","i","length","bk1","odds1","j","bk2","odds2","price","push","children","home_team","away_team","fileName","_jsxFileName","lineNumber","columnNumber","point","style","color"],"sources":["C:/Users/Teren/Documents/GitHub/arbitrage-betting/src/components/functions/renderPlayerPropsArbitrage.tsx"],"sourcesContent":["import React, { JSX } from 'react';\r\n\r\ninterface Outcome {\r\n  name: string;\r\n  price: number;\r\n  point?: number;\r\n  description: string; // Player name\r\n}\r\n\r\ninterface Market {\r\n  key: string;\r\n  outcomes: Outcome[];\r\n}\r\n\r\ninterface Bookmaker {\r\n  key: string;\r\n  title: string;\r\n  markets?: Market[];\r\n}\r\n\r\ninterface Game {\r\n  home_team: string;\r\n  away_team: string;\r\n  bookmakers: Bookmaker[];\r\n}\r\n\r\nconst calculateImpliedProbability = (odds: number) => 1 / odds;\r\n\r\nconst checkArbitrage = (overOdds: number, underOdds: number) => {\r\n  const probOver = calculateImpliedProbability(overOdds);\r\n  const probUnder = calculateImpliedProbability(underOdds);\r\n  return probOver + probUnder < 1;\r\n};\r\n\r\nconst extractPlayerAssists = (markets?: Market[]) =>\r\n  markets?.find((m) => m.key === 'player_assists');\r\n\r\nexport const renderPlayerPropsArbitrageBets = (games: Game[]): JSX.Element[] => {\r\n  const playerPropsArbitrage: JSX.Element[] = [];\r\n\r\n  games.forEach((game) => {\r\n    const players: Record<string, Record<string, { over?: Outcome; under?: Outcome }>> = {};\r\n\r\n    game.bookmakers.forEach((bookmaker) => {\r\n      const assistMarket = extractPlayerAssists(bookmaker.markets);\r\n      if (!assistMarket) return;\r\n\r\n      assistMarket.outcomes.forEach((outcome) => {\r\n        const playerName = outcome.description;\r\n        if (!players[playerName]) players[playerName] = {};\r\n        if (!players[playerName][bookmaker.title]) players[playerName][bookmaker.title] = {};\r\n\r\n        if (outcome.name === 'Over') {\r\n          players[playerName][bookmaker.title].over = outcome;\r\n        } else if (outcome.name === 'Under') {\r\n          players[playerName][bookmaker.title].under = outcome;\r\n        }\r\n      });\r\n    });\r\n\r\n    Object.entries(players).forEach(([playerName, books]) => {\r\n      const bookmakers = Object.entries(books);\r\n      for (let i = 0; i < bookmakers.length; i++) {\r\n        const [bk1, odds1] = bookmakers[i];\r\n        for (let j = 0; j < bookmakers.length; j++) {\r\n          if (i === j) continue;\r\n          const [bk2, odds2] = bookmakers[j];\r\n\r\n          if (odds1.over && odds2.under && checkArbitrage(odds1.over.price, odds2.under.price)) {\r\n            playerPropsArbitrage.push(\r\n              <li key={`${game.home_team}-${game.away_team}-${playerName}-${bk1}-${bk2}`}>\r\n                <strong>{game.home_team} vs {game.away_team}</strong><br />\r\n                <strong>{playerName}</strong> (Assists Market)<br />\r\n                {bk1} (Over): {odds1.over.price} (Line: {odds1.over.point})<br />\r\n                {bk2} (Under): {odds2.under.price} (Line: {odds2.under.point})<br />\r\n                <strong style={{ color: 'red' }}>Arbitrage Opportunity!</strong>\r\n              </li>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  return playerPropsArbitrage;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}